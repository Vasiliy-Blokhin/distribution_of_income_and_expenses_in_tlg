from aiogram import types, F, Router
from aiogram.filters import Command
from aiogram.utils.keyboard import InlineKeyboardBuilder

from elements.message_builder import (
    risk_message,
    info_message,
    last_statistic_message,
    all_statistic_message,
)

router = Router()


# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞.
@router.message(Command('–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è'))
async def info_keyboard(message: types.Message):
    """ –í—ã–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è - –æ–±—â–µ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏."""
    builder = InlineKeyboardBuilder()

    builder.row(
        types.InlineKeyboardButton(
            text='‚ö†Ô∏è —Ä–∏—Å–∫–∏',
            callback_data='—Ä–∏—Å–∫–∏'
        )
    )
    builder.row(
        types.InlineKeyboardButton(
            text='üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è',
            callback_data='–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è'
        )
    )
    await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ: ', reply_markup=builder.as_markup())


@router.callback_query(F.data == '—Ä–∏—Å–∫–∏')
async def risk_button(callback: types.CallbackQuery):
    """ –í—ã–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤–æ–∑–º–æ–∂–Ω—ã—Ö —Ä–∏—Å–∫–∞—Ö."""
    await callback.message.answer(text=risk_message())


@router.callback_query(F.data == '–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è')
async def info_button(callback: types.CallbackQuery):
    """ –í—ã–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤–æ–∑–º–æ–∂–Ω—ã—Ö —Ä–∏—Å–∫–∞—Ö."""
    await callback.message.answer(text=info_message())
#--------------------------------------------------------

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
@router.message(Command('—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞'))
async def statistic_keyboard(message: types.Message):
    """ –í—ã–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è - –æ–±—â–µ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏."""
    builder = InlineKeyboardBuilder()

    builder.row(
        types.InlineKeyboardButton(
            text='üìù –ü–æ—Å–ª–µ–¥–Ω—è—è –∏—Ç–µ—Ä–∞—Ü–∏—è (–ª—É—á—à–∏–µ)',
            callback_data='last_stat_max'
        )
    )
    builder.row(
        types.InlineKeyboardButton(
            text='üìù –ó–∞ –≤—Å–µ –≤—Ä–µ–º—è (–ª—É—á—à–∏–µ)',
            callback_data='all_stat_max'
        )
    )
    await message.answer('–£–∫–∞–∂–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ: ', reply_markup=builder.as_markup())


@router.callback_query(F.data == 'last_stat_max')
async def last_statistic_max_callback(callback: types.CallbackQuery):
    """ –í—ã–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Å–æ–ª–µ–¥–Ω–µ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏."""
    await callback.message.answer(text=last_statistic_message())


@router.callback_query(F.data == 'all_stat_max')
async def all_statistic__max_callback(callback: types.CallbackQuery):
    """ –í—ã–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∑–∞ –≤—Å–µ –≤—Ä–µ–º—è."""
    await callback.message.answer(text=all_statistic_message())
#--------------------------------------------------------
